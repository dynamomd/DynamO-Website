<?php 
   $mathjax=1;
   /*Check that this file is being accessed by the template*/
   if (!isset($in_template))
   {
   header( 'Location: /index.php/404');
   return;
   }
   $pagetitle="Output Plugin/File Reference";
   ?>
<?php printTOC(); ?>
<p style="text-align:center; margin:15px; background-color:#FFD800; font-size:16pt; font-family:sans; line-height:40px;">
  <b>This reference is currently being written and is incomplete.</b>
</p>
<p>
  In this reference a complete description of the available output
  plugins of DynamO, and how to load them is presented.
</p>
<p>
  Output plugins are routines which can be activated in DynamO to
  collect measurements on the simulation <i>while it is
  running</i>. Although most static/structural properties can be
  measured from the configuration files, dynamical properties must be
  measured using output plugins. There are a wide range of properties
  which can be measured by DynamO, from transport properties
  (viscosity, mutual diffusion, thermal conductivity) to internal
  energy histograms.
</p>
<p>
  All data collected by active output plugins is written into a single
  XML file at the end of a simulation (<i>output.xml.bz2</i> by
  default).
</p>
<p>
  DynamO loads the <a href="#misc-plugin">Misc output plugin</a>
  automatically as it samples a wide range of properties of the system
  which are computationally inexpensive to collect; however, all other
  output plugins must be enabled manually. This is discussed in the
  following section:
</p>
<h1>Loading Plugins</h1>
<p>
  Once you have chosen a plugin to load, you simply add it to the
  dynarun command line using the <i>-L</i> option. For example, to
  load the <a href="#intenergyhist-internal-energy-histogram">internal
  energy histogram plugin</a>, you would run
</p>
<?php codeblockstart(); ?>
dynarun config.xml -c 1000000 -L IntEnergyHist
<?php codeblockend("brush: shell;"); ?>
<p>
  And the <i>output.xml.bz2</i> file generated by this dynarun command
  will now contain a histogram of the internal energy. Many of the
  output plugins can take options and can be set using a colon after
  the plugin name, like so:
</p>
<?php codeblockstart(); ?>
dynarun config.xml -c 1000000 -L IntEnergyHist:BinWidth=0.1
<?php codeblockend("brush: shell;"); ?>
<p>
  If you need to specify multiple options, you must use a comma to
  delimit options. For example, the <a href="#mft-mean-free-time">mean
  free time plugin</a> has two options which can be set like so:
</p>
<?php codeblockstart(); ?>
dynarun config.xml -c 1000000 -L MFT:BinWidth=0.5,Length=100
<?php codeblockend("brush: shell;"); ?>
<p>
  In the following sections, the options and output of each output
  plugin are listed along with details on the calculation of the
  properties.
</p>
<h1>Misc Plugin</h1>
<p>
  The Misc plugin is loaded automatically and contains properties
  which are relatively cheap to collect. Fortunately, this includes
  the majority of the output which it is possible to collect with
  DynamO. The output tags of the Misc plugin and how they are
  collected are discussed in the following subsections.
</p>
<h2>Density</h2>
<p>
  This tag contains the number of particles divided by the volume of
  the primary image. In non-periodic systems, this value may not have
  any significance as the primary image is not related to the dynamics
  of the system. Complex boundary effects, such as walls reducing the
  accessible volume of the system, are not included in this
  calculation.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Density val="0.5"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>val</b> <i>(attribute)</i>: The number density of the system
    ($N/V$).
  </li>
</ul>
<h2>Packing Fraction</h2>
<p>
  This tag contains the excluded volume of all particles divided by
  the volume of the primary image. In non-periodic systems, this value
  may not have any significance as the primary image is not related to
  the dynamics of the system. Complex boundary effects, such as walls
  reducing the accessible volume of the system, are not included in
  this calculation. The volume of each particle is calculated from the
  representative interaction which is specified by the
  particle's <a href="/index.php/reference#species">Species</a> tags.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <PackingFraction val="0.261799387799154"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>val</b> <i>(attribute)</i>: The packing fraction of the system.
  </li>
</ul>
<h2>SpeciesCount</h2>
<p>
  This tag contains the number
  of <a href="/index.php/reference#species">Species</a> in the system.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <SpeciesCount val="1"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>val</b> <i>(attribute)</i>: The number of species in the
    system.
  </li>
</ul>
<h2>ParticleCount</h2>
<p>
  This tag contains the number
  of <a href="/index.php/reference#species">Particles</a> in the
  system.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <ParticleCount val="1372"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>val</b> <i>(attribute)</i>: The number of particles in the
    system.
  </li>
</ul>
<h2>SystemMomentum</h2>
<p>
  This tag contains the current and average momentum of all of the
  particles in the system.

  <br/> The averages in this tag are collected exactly (see the
  <a href="/index.php/FAQ#q-how-does-dynamo-collect-exact-timeaverages">FAQ
  on exact averages in DynamO</a>) and so this data is not valid
  when <a href="/index.php/reference#typele">Lees-Edwards boundary
  conditions</a> are applied (or currently in systems with
  gravity, <a href="https://github.com/toastedcrumpets/DynamO/issues/22">see
  issue #22</a>).
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <SystemMomentum>
    <Current x="-1.02140518265514e-13" y="3.42226247340705e-14" z="-9.39248678832882e-14"/>
    <Average x="-1.02140518265516e-13" y="3.42226247340696e-14" z="-9.39248678832878e-14"/>
  </SystemMomentum>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Current</b> <i>(tag)</i>: The total momentum of the system at
    the moment the output is written out.
    <ul>
      <li>
	<b>x</b>, <b>y</b>, <b>z</b>, <i>(attributes)</i>: The
	components of the current momentum.
      </li>
    </ul>
  </li>
  <li>
    <b>Average</b> <i>(tag)</i>: The time-averaged total momentum of
    the system.
    <ul>
      <li>
	<b>x</b>, <b>y</b>, <b>z</b>, <i>(attributes)</i>: The
	components of the average momentum.
      </li>
    </ul>
  </li>
</ul>
<h2>Temperature</h2>
<p>
  This tag contains the temperature of the particles in the
  system. This includes rotational degrees of freedom (if present). As
  with all temperature values in DynamO, the temperature reported is
  effectively the product, $k_B\,T$ (see
  the <a href="/index.php/FAQ#q-what-are-the-units-of-dynamo">FAQ on
  units</a>).

  <br/> The averages in this tag are collected exactly (see the
  <a href="/index.php/FAQ#q-how-does-dynamo-collect-exact-timeaverages">FAQ
  on exact averages in DynamO</a>) and so this data is not valid
  when <a href="/index.php/reference#typele">Lees-Edwards boundary
  conditions</a> are applied (or currently in systems with
  gravity, <a href="https://github.com/toastedcrumpets/DynamO/issues/22">see
  issue #22</a>).
</p>
<p>
  The temperature is calculated using the standard equipartition
  expression:
  
  \[k_B\,T=\frac{2}{N\,f}\sum_i^N E_i^{kinetic}\]
  
  where $E_i^{kinetic}$ is the kinetic energy of particle $i$
  (including rotational energy) and $f$ is the degrees of freedom of
  the particle. $f$ is automatically set to $f=3$ in systems without
  rotational degrees of freedom and to $f=5$ in systems with
  rotational degrees of freedom.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Temperature Mean="1.00000000000002" MeanSqr="0.999999999999996" Current="1.00000000000001" Min="1.00000000000001" Max="1.00000000000001"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Mean</b> <i>(attribute)</i>: The time-averaged temperature,
    $\left\langle k_B\,T\right\rangle$.
  </li>
  <li>
    <b>MeanSqr</b> <i>(attribute)</i>: The time-averaged square of the
    temperature, $\left\langle k_B^2\,T^2\right\rangle$. This can be
    used to work out the standard deviation of the temperature using
    the following formula: \[\sigma = \sqrt{\left\langle
    k_B^2\,T^2\right\rangle - \left\langle k_B\,T\right\rangle^2}\]
  </li>
  <li>
    <b>Current</b> <i>(attribute)</i>: The value of the temperature,
    $k_B\,T$, at the moment the output is written out.
  </li>
  <li>
    <b>Min</b>, <b>Max</b> <i>(attributes)</i>: The minimum and
    maximum values of the temperature during the simulation.
  </li>
</ul>
<h2>UConfigurational</h2>
<p>
  This tag contains the interaction energy per particle. This is equal
  to the excess internal energy (also known as the configurational
  internal energy).

  <br/> The averages in this tag are collected exactly (see the
  <a href="/index.php/FAQ#q-how-does-dynamo-collect-exact-timeaverages">FAQ
  on exact averages in DynamO</a>) and so this data is not valid
  when <a href="/index.php/reference#typele">Lees-Edwards boundary
  conditions</a> are applied (or currently in systems with
  gravity, <a href="https://github.com/toastedcrumpets/DynamO/issues/22">see
  issue #22</a>).
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <UConfigurational Mean="-7047.30749520661" MeanSqr="49679058.1379387" Current="-7340" Min="-8232" Max="-6912"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Mean</b> <i>(attribute)</i>: The time-averaged configurational
    internal energy, $\left\langle U_{conf.}\right\rangle$.
  </li>
  <li>
    <b>MeanSqr</b> <i>(attribute)</i>: The time-averaged square of the
    configurational internal energy, $\left\langle
    U_{conf.}^2\right\rangle$. This can be used to work out the
    standard deviation of the configurational internal energy using
    the following formula: \[\sigma = \sqrt{\left\langle
    U_{conf.}^2\right\rangle - \left\langle
    U_{conf.}\right\rangle^2}\]
  </li>
  <li>
    <b>Current</b> <i>(attribute)</i>: The value of the
    configurational internal energy, $U_{conf.}$, at the moment the
    output is written out.
  </li>
  <li>
    <b>Min</b>, <b>Max</b> <i>(attributes)</i>: The minimum and
    maximum values of the configurational internal energy reached
    during the simulation.
  </li>
</ul>
<h2>ResidualHeatCapacity</h2>
<p>
  This tag is provided for convenience. It contains the excess heat
  capacity, calculated from the fluctuations of the configurational
  internal energy using the following expression:
  
  \[\frac{C_v^{ex.}}{k_B}=\frac{\left\langle U_{conf.}^2\right\rangle
  - \left\langle U_{conf.}\right\rangle^2}{k_B^2\,T^2}\]
  
  To calculate the full heat capacity of the system, the ideal gas
  contribution must be added:

  \[\frac{C_v}{k_B}=\frac{C_v^{ex.}}{k_B} +N\frac{f}{2}\] 

  where $f$ is the degrees of freedom of the particle.
  <br/>
  <b>Note</b>: This expression and the values reported are only valid
  in the canonical (NVT) ensemble.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <ResidualHeatCapacity Value="80608.2639343955"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Value</b> <i>(attribute)</i>: The calculated excess
    heat capacity $(C_v^{ex.}/k_B)$.
  </li>
</ul>
<h2>Pressure</h2>
<p>
  This tag contains the full pressure tensor for the system, worked
  out using the virial expression:
  
  \[\mathbf{P}=\mathbf{P}^{kinetic}+\mathbf{P}^{interaction}\]
  
  where the kinetic pressure is given by:
  
  \[\mathbf{P}^{kinetic}=\frac{1}{V}\sum_i^N m_i\,\mathbf{v}_i\mathbf{v}_i\]
  
  where $m_i$ is the mass of particle $i$.  Please note that
  $\mathbf{v}_i\mathbf{v}_i$ is a dyadic product which yields a matrix
  result. The contribution to the pressure due to interactions is
  given by:

  \[\mathbf{P}^{interaction}=\frac{1}{V\,t_{sim}}\sum_{ij}^{event}
  \Delta \mathbf{p}_i\mathbf{r}_{ij}\]

  where $t_{sim}$ is the total simulation time, the summation is over
  each two-particle event
  (<a href="/index.php/reference#interaction">Interaction</a>), $i$
  and $j$ indicate the two particles involved in the event,
  $\Delta\mathbf{p}_i$ is the momentum impulse on particle $i$, and
  $\mathbf{r}_{ij}=\mathbf{r}_{i} - \mathbf{r}_{j}$ is the separation
  vector between the interacting particles. The hydrostatic pressure
  can be computed from the trace of the pressure tensor:
  
  \[p=\mathrm{tr}(\mathbf{P})/3=\left(P_{xx}+P_{yy}+P_{zz}\right)/3\]
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Pressure Avg="-1.92667849178502">
    <Tensor>
-1.92776085293681 -0.027284740627551 -0.0330674943624325 
-0.027284740627551 -1.91924243731331 -0.0444242381174982 
-0.0330674943624326 -0.0444242381174982 -1.93303218510494 
    </Tensor>
    <InteractionContribution>
-2.13900845558922 -0.0269634925340249 -0.032459636868961 
-0.0269634925340249 -2.13348059155252 -0.0441115524879792 
-0.032459636868961 -0.0441115524879792 -2.14406792617732 
    </InteractionContribution>
  </Pressure>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Avg</b> <i>(attribute)</i>: This attribute contains the
    hydrostatic pressure, $p$, computed from the trace of the pressure
    tensor.
  </li>
  <li>
    <b>Tensor</b> <i>(tag)</i>: This tag contains the full pressure
    tensor, $\mathbf{P}$, with the components written out as follows:

    \[\begin{align}
    \begin{matrix}
    P_{xx} & P_{xy} & P_{xz}\\
    P_{yx} & P_{yy} & P_{yz}\\
    P_{zx} & P_{zy} & P_{zz}
    \end{matrix}
    \end{align}\]
  </li>
  <li>
    <b>InteractionContribution</b> <i>(tag)</i>: This tag only
    contains the interaction contributions to the pressure tensor
    ($\mathbf{P}^{interaction}$), with the components written out as
    follows:
    
    \[\begin{align}
    \begin{matrix}
    P_{xx}^{interaction} & P_{xy}^{interaction} & P_{xz}^{interaction}\\
    P_{yx}^{interaction} & P_{yy}^{interaction} & P_{yz}^{interaction}\\
    P_{zx}^{interaction} & P_{zy}^{interaction} & P_{zz}^{interaction}
    \end{matrix}
    \end{align}\]
  </li>
</ul>
<h2><a id="duration"></a>Duration</h2>
<p>
  This tag contains information on the duration of the simulation
  (from the perspective of the model, not the user).  See
  the <a href="#timing">Timing</a> tag for information on the
  calculation time of the simulation.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Duration Events="1059702" OneParticleEvents="0" TwoParticleEvents="1059702" VirtualEvents="1" Time="59.348997249289"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Events</b> <i>(attribute)</i>: The total number of events
    executed.
  </li>
  <li>
    <b>OneParticleEvents</b> <i>(attribute)</i>: The total number of
    events involving a single
    particle. All <a href="/index.php/reference#local">Local</a>
    and <a href="/index.php/reference#global">Global</a>s only
    generate single-particle
    events. <a href="/index.php/reference#system">System</a> events
    may produce a mixture of single and two particle events at once.
  </li>
  <li>
    <b>TwoParticleEvents</b> <i>(attribute)</i>: The total number of
    events involving a pair of
    particles. All <a href="/index.php/reference#interaction">Interaction</a>s
    generate two-particle events
    . <a href="/index.php/reference#system">System</a> events may
    produce a mixture of single and two particle events at once.
  </li>
  <li>
    <b>VirtualEvents</b> <i>(attribute)</i>: Virtual events are used
    to recalculate the future event list for a particle, and can arise
    from any part of DynamO, from the Scheduler to
    Interactions/Globals/Locals/Systems.
  </li>
  <li>
    <b>Time</b> <i>(attribute)</i>: The total time the simulated was
    executed for, in simulation units.
  </li>
</ul>
<h2>EventCounters</h2>
<p>
  This tag contains more detailed information on the types of events
  which have occurred during the simulation.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <EventCounters>
    <Entry Type="Interaction" Name="Bulk" Event="BOUNCE" Count="1636222"/>
    <Entry Type="System" Name="Thermostat" Event="GAUSSIAN" Count="136876"/>
    <Entry Type="Global" Name="PBCSentinel" Event="VIRTUAL" Count="14"/>
    ...
  </EventCounters>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Entry</b> <i>(tag)</i>: This tag contains attributes which
    describe the event type and the number of times it has occurred.
    <ul>
      <li>
	<b>Type</b> <i>(attribute)</i>: May be "Interaction", "Local",
	"Global", "System" depending on the source of the event.
      </li>
      <li>
	<b>Name</b> <i>(attribute)</i>: The name of the
	Interaction/Local/Global/System which is the source of the
	event.
      </li>
      <li>
	<b>Event</b> <i>(attribute)</i>: The event "type" within the
	event source. For example, the square-well Interaction has
	Bounce, Capture, Release and Core events depending on where
	the event occurred in the potential.
      </li>
      <li>
	<b>Count</b> <i>(attribute)</i>: The number of times the event
	was observed in the simulation.
      </li>
    </ul>
  </li>
</ul>
<h2><a id="timing"></a>Timing</h2>
<p>
  This tag contains information on the calculation time of the
  simulation. See the <a href="#duration">Duration</a> tag for more
  information on the "simulated" timing.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Timing Start="Mon Jan 14 20:26:37 2013 " End="Mon Jan 14 20:26:59 2013 " EventsPerSec="49262.070727909" SimTimePerSec="2.75894031681944"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Start</b> <i>(attribute)</i>: The date and time that the simulation
    began to run (post-initialisation).
  </li>
  <li>
    <b>End</b> <i>(attribute)</i>: The date and time that the simulation
    wrote-out this file (typically during at the end of the run).
  </li>
  <li>
    <b>EventsPerSec</b> <i>(attribute)</i>: The events executed per second
    of calculation. Probably the best indicator of the calculation
    "speed".
  </li>
  <li>
    <b>SimTimePerSec</b> <i>(attribute)</i>: The simulation time executed
    per second of calculation.
  </li>
</ul>
<h2>totMeanFreeTime</h2>
<p>
  This tag contains the overall mean free time of a particle. This is
  calculated from the counts of the one-particle ($N_{1}^{events}$)
  and two-particle ($N_{2}^{events}$) event counts using the following
  formula:

  \[ t_{mft} = t_{sim}\,N/\left(2\,N_{2}^{events} + N_{1}^{events}\right)\]
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <totMeanFreeTime val="0.0384196803563759"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>val</b> <i>(attribute)</i>: The mean free time, $t_{mft}$.
  </li>
</ul>
<h2>NegativeTimeEvents</h2>
<p>
  This tag contains the total number of events executed where the time
  was earlier than the current time (a negative time until the event
  occurred). This used to be a good indicator if the simulation was
  unstable due to accessing an invalid state; however, the
  introduction of the stable EDMD algorithm has made this tag largely
  obsolete.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <NegativeTimeEvents Count="0"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Count</b> <i>(attribute)</i>: The number of events executed
    with a time in the past.
  </li>
</ul>
<h2>Memusage</h2>
<p>
  This tag contains the best estimate DynamO can make of the memory
  used by DynamO at the last event executed in the simulation. Due to
  the way this information is obtained, its estimate of the maximum
  memory usage at that time.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Memusage MaxKiloBytes="6580"/>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>MaxKiloBytes</b> <i>(attribute)</i>: The memory used by the
    simulation at the time the output file was written out.
  </li>
</ul>
<h2><a id="thermalconductivity"></a>ThermalConductivity</h2>
<p>
  This tag contains the Einstein correlation function which can be
  used to obtain estimates for the mainstream definition of the
  thermal conductivity of a fluid, $\mathbf{L}_{qq}$. The correlator
  used here is:

  \[\Delta t\,\mathbf{L}_{qq} (\Delta t) =
  \frac{1}{2\,V\,k_B^2\,T^2}\left\langle \left[\phi_{q}(t_0,\Delta
  t)\right]^2\right\rangle_{t_0} \]

  where $\Delta t$ is the correlation time, the angle brackets
  $\langle\rangle_{t_0}$ denote an averaging over the time origin,
  $t_0$, and $\phi_{q}(t_0,\Delta t)$ is the integral of the
  microscopic heat flux from $t_0$ to $t_0+\Delta t$. For
  discontinuous systems, this is most conveniently evaluated using the
  following expression:
  
  \[\phi_{q}(t_0, \Delta t) = \left[\int_{t_0}^{t_0+\Delta t}
  \sum_i^N\mathbf{v}_i\,e_i\,{\rm d}t\right] +
  \left[\sum_{i,j}^{events\in[t_0,t_0+\Delta
  t]}\mathbf{r}_{ij}\,\Delta e_i\right]\]
  
  where $e_i$ is the internal energy of particle $i$ (interaction
  energies should be equally split between the interacting pair). The
  leftmost term in square brackets contains the free streaming
  contribution and the sum is over all particles. The rightmost term
  contains the contribution due to interactions, and the sum is over
  all two-particle events in the time $[t_0,t_0+\Delta t]$, each
  involving a particle $i$ and $j$.
</p>
<p>
  You should note that $\mathbf{L}_{qq}$ is a vector quantity, and so
  three values of the thermal conductivity are measured. These
  correspond to the transport in the $x$, $y$, and $z$-directions. If
  your system is isotropic, you may just average the three values to
  improve your statistics.
</p>
<p>
  <b>Restrictions</b>: This form is only valid in the micro-canonical
  ensemble (NVE).  The current implementation is also only valid
  for systems with no interaction energies (athermal systems) and
  without rotational degrees of freedom (such as the hard sphere
  fluid), as it uses the approximation $e_i\approx m\,v^2_i/2$
  (see <a href="https://github.com/toastedcrumpets/DynamO/issues/23">issue
  #23</a> on the bug tracker).
</p>
<p>
  <b><a id="extrapolationofcorrelators"></a>Extrapolation to the
  infinite time limit</b>: As with all of the Green-Kubo/Einstein
  relationships for the transport coefficients, the desired
  (hydrodynamic) values are the infinite time correlation values:

  \[\mathbf{L}_{qq} = \lim_{\Delta t\to\infty} \mathbf{L}_{qq}(\Delta
  t)\]

  A convenient way to extrapolate to the long time value is to plot
  $\Delta t\,L_{qq,x}(\Delta t)$ versus $\Delta t$. The slope of this
  plot is then the transport coefficient, and a straight line can be
  regressed to the long time section of the plot to extrapolate the
  value.
</p>
<p>
  <b><a id="generalnotesoncorrlations"></a>General notes on evaluating
  correlation functions</b>: The notes below attempt to explain that a
  lot of judgement is needed when evaluation correlation
  functions. There is only a "window" of correlation times which can
  be used to extract the transport coefficients.
  
  <br/><b>Note 1</b>: In periodic systems, correlation functions
  should be studied only up to the sound-wave traversal time of the
  box, otherwise additional correlations will appear due to the
  "artificial" periodicity of the system.

  <br/><b>Note 2</b>: At increasingly long correlation times, the
  number of samples of the correlation function obtained from a single
  simulation will decrease. Therefore, long time values will have poor
  statistics (which should be avoided if possible).

  <br/><b>Note 3</b>: At short times, molecular processes will
  strongly influence the correlation function. For example, take a
  linear/chain polymer. At short times, energy might rapidly travel
  down the chain.  This will make it look like there's a high thermal
  conductivity at short times; however, the energy will not easily
  transfer away from the molecule and may travel back up the
  chain. This "return" of the energy will cause the thermal
  conductivity to decrease sharply at short times. You must therefore
  use a sufficiently long correlation time to allow these microscopic
  processes to decay.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <ThermalConductivity>
    <Correlator>
0 0 0 0 0
1 59 3.65611579164476 3.95102401183708 3.10818958034339
2 58 6.66422300757686 10.2522327519284 5.65382677461933
...
    </Correlator>
  </ThermalConductivity>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Correlator</b> <i>(tag)</i>: The correlation data, outputted in
    columns which are:

    \[\Delta t \qquad Count \qquad \Delta t\,L_{qq,x}(\Delta t) \qquad
    \Delta t\,L_{qq,y}(\Delta t) \qquad \Delta t\,L_{qq,z}(\Delta t)\] 

    where
    
    <br/>$\Delta t$ is the correlation time.

    <br/>$Count$ is the number of samples at that correlation time.
    
    <br/>$\Delta t\,L_{qq,x}(\Delta t)$ is the time-dependent transport
    coefficient, measured in the $x$-direction.
  </li>
</ul>
<h2>Viscosity</h2>
<p>
  This tag contains the Einstein correlation function which can be
  used to obtain estimates for the shear and bulk viscosity of the
  fluid. Please see the section
  on <a href="#thermalconductivity">ThermalConductivity</a> for most
  of the notation used here. The correlator used here is:

  \[\Delta t\,\mathbf{L}_{\eta\eta} (\Delta t) =
  \frac{1}{2\,V\,k_B\,T}\left(\left\langle
  \left[\phi_{\eta}(t_0,\Delta t)\right]^2\right\rangle_{t_0} -
  \left[\Delta t\,V\,\mathbf{P}\right]^2\right) \]

  where $\phi_{\eta}(t_0, \Delta t)$ is the integral of the
  microscopic stress flux.  For discontinuous systems, this is most
  conveniently evaluated using the following expression:
  
  \[\phi_{\eta}(t_0, \Delta t) = \left[\int_{t_0}^{t_0+\Delta t}
  \sum_i^Nm_i\,\mathbf{v}_i\,\mathbf{v}_i\,{\rm d}t\right] +
  \left[\sum_{i,j}^{events\in[t_0,t_0+\Delta
  t]}\mathbf{r}_{ij}\,m_i\,\Delta \mathbf{v}_i\right]\]
  
  The leftmost term in square brackets contains the free streaming
  contribution and the sum is over all particles. The rightmost term
  contains the contribution due to interactions, and the sum is over
  all two-particle events in the time $[t_0,t_0+\Delta t]$, each
  involving a particle $i$ and $j$.
</p>
<p>
  You should note that $\mathbf{L}_{\eta\eta}$ is a matrix quantity, and so
  there are 9 measured values. For example, the $L_{\eta\eta,xy}$
  element correspons to the transport of $x$-momentum in $y$-direction
  and vice-versa. In isotropic systems, there are only two important
  phenomological coefficients: the shear viscosity, $\eta$, and the
  bulk viscosity, $\kappa$. These are related to
  $\mathbf{L}_{\eta\eta}$ by the following expressions:
  
  \[\eta = L_{\eta\eta,xy} = L_{\eta\eta,xz} = L_{\eta\eta,yz}\] 

  \[\frac{4}{3}\eta + \kappa = L_{\eta\eta,xx} = L_{\eta\eta,yy} = L_{\eta\eta,zz} \]
</p>
<p>
  <b>Restrictions</b>: This correlator is valid in all molecular
  systems.
</p>
<p>
  <b>Extrapolation to the infinite time limit</b>:
  See <a href="#extrapolationofcorrelators">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>General notes on evaluating correlation functions</b>:
  See <a href="#generalnotesoncorrlations">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <Viscosity>
    <Correlator>
0 0 0 0 0 0 0 0 0 0 0
1.20049009599756 116 8.37184016842046 1.62337026137236 2.1589088807082 1.62337026137236 8.42188561600556 1.5159625309261 2.1589088807082 1.5159625309261 7.01773169575511 
2.40098019199512 115 20.6408557061605 3.07915750482858 5.12305796346685 3.07915750482858 20.121862094858 3.29182185206649 5.12305796346685 3.2918218520665 16.8444542050959 
...
    </Correlator>
  </Viscosity>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Correlator</b> <i>(tag)</i>: The correlation data, outputted in
    columns which are:

    \[\Delta t \qquad Count 
    \qquad \Delta t\,L_{\eta\eta,xx}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,xy}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,xz}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,yx}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,yy}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,yz}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,zx}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,zy}(\Delta t)
    \qquad \Delta t\,L_{\eta\eta,zz}(\Delta t)
    \] 

    where
    
    <br/>$\Delta t$ is the correlation time.

    <br/>$Count$ is the number of samples at that correlation time.
    
    <br/>$\Delta t\,L_{\eta\eta,xy}(\Delta t)$ is the $xy$-component
    of the time-dependent transport coefficient.
  </li>
</ul>
<h2>MutualDiffusion</h2>
<p>
  This tag contains the Einstein correlation function which can be
  used to obtain estimates for the mutual diffusion coefficients of
  the fluid. Please see the previous sections for most of the notation
  used here. The correlator used here is:

  \[\Delta t\,\mathbf{L}_{ab} (\Delta t) =
  \frac{1}{2\,V\,k_B\,T}\left\langle \phi_{a}(t_0,\Delta
  t)\,\phi_{b}(t_0,\Delta
  t)\right\rangle_{t_0} \]

  where $\phi_{a}(t_0, \Delta t)$ is the integral of the microscopic
  flux of <a href="/index.php/reference#species">Species</a> $a$.
  For discontinuous systems, this is most conveniently evaluated using
  the following expression:

  \[\phi_{a}(t_0, \Delta t) = \int_{t_0}^{t_0+\Delta t}
  \left(\sum_{i\in a} m_i\,\mathbf{v}_i - c_a \sum_i^N
  m_i\,\mathbf{v}_i\right){\rm d}t \]

  The leftmost sum is only over the particles which belong
  to <a href="/index.php/reference#species">Species</a> $a$ and
  the rightmost sum is over all particles. The variable $c_a$ is the
  mass fraction of the species given by
  
  \[c_a = \left(\sum_{i\in a} m_i\right) / \left(\sum_i^N m_i\right)\]
</p>
<p>
  You should note that $\mathbf{L}_{ab}$ is a vector quantity, and so
  there are 3 measured values. These correspond to the transport in
  the $x$, $y$, and $z$-directions. If your system is isotropic, you
  may just average the three values to improve your statistics. For
  each pairing of <a href="/index.php/reference#species">Species</a>
  in the system, there is a corresponding mutual diffusion coefficient
  to measure the diffusion of
  one <a href="/index.php/reference#species">Species</a> through
  the other. You should note that $L_{ab}=L_{ba}$, so DynamO only
  collects one half of all of these pairings.
</p>
<p>
  <b>Restrictions</b>: This correlator is valid in all molecular
  systems.
</p>
<p>
  <b>Extrapolation to the infinite time limit</b>:
  See <a href="#extrapolationofcorrelators">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>General notes on evaluating correlation functions</b>:
  See <a href="#generalnotesoncorrlations">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
  <MutualDiffusion>
    <Correlator Species1="Bulk" Species2="Bulk">
0 0 0 0 0
1.20049009599756 116 4.34711745476417e-29 1.04569539768932e-28 1.01913292670329e-28 
2.40098019199512 115 1.73926903951606e-28 4.20033393703228e-28 4.07395327680373e-28 
...
    </Correlator>
  </MutualDiffusion>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Species1</b> <i>(attribute)</i>: The name of the
    first <a href="/index.php/reference#species">Species</a>
    (species $a$ in $L_{ab}$).
  </li>
  <li>
    <b>Species2</b> <i>(attribute)</i>: The name of the
    second <a href="/index.php/reference#species">Species</a>
    (species $b$ in $L_{ab}$).
  </li>
  <li>
    <b>Correlator</b> <i>(tag)</i>: The correlation data, outputted in
    columns which are:

    \[\Delta t \qquad Count 
    \qquad \Delta t\,L_{ab,x}(\Delta t)
    \qquad \Delta t\,L_{ab,y}(\Delta t)
    \qquad \Delta t\,L_{ab,z}(\Delta t)
    \] 

    where
    
    <br/>$\Delta t$ is the correlation time.

    <br/>$Count$ is the number of samples at that correlation time.
    
    <br/>$\Delta t\,L_{ab,x}(\Delta t)$ is the $x$-component of the
    time-dependent transport coefficient.
  </li>
</ul>
<h2>ThermalDiffusion</h2>
<p>
  This tag contains the Einstein correlation function which can be
  used to obtain estimates for the thermal diffusion coefficients of
  the fluid. Please see the previous sections for most of the notation
  used here. The correlator used here is:

  \[\Delta t\,\mathbf{L}_{aq} (\Delta t) =
  \frac{1}{2\,V\,k_B\,T}\left\langle \phi_{a}(t_0,\Delta
  t)\,\phi_{q}(t_0,\Delta t)\right\rangle_{t_0} \]

  where $\phi_{a}(t_0, \Delta t)$ is the integral of the microscopic
  flux of <a href="/index.php/reference#species">Species</a> $a$
  and $\phi_{q}(t_0, \Delta t)$ is the integral of the microscopic
  heat flux. These are evaluated using the expressions given in the
  previous sections
  on <a href="#thermalconductivity">ThermalConductivity</a>
  and <a href="#mutualdiffusion">MutualDiffusion</a>.
</p>
<p>
  You should note that $\mathbf{L}_{aq}$ is a vector quantity, and so
  there are 3 measured values. These correspond to the transport in
  the $x$, $y$, and $z$-directions. If your system is isotropic, you
  may just average the three values to improve your statistics. For
  each <a href="/index.php/reference#species">Species</a> in the
  system, there is a corresponding thermal diffusion coefficient. You
  should note that $L_{aq}=L_{qa}$.
</p>
<p>
  <b>Restrictions</b>: All restrictions to the
  <a href="#thermalconductivity">ThermalConductivity correlator</a>
  apply here.
</p>
<p>
  <b>Extrapolation to the infinite time limit</b>:
  See <a href="#extrapolationofcorrelators">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>General notes on evaluating correlation functions</b>:
  See <a href="#generalnotesoncorrlations">the notes in the
  ThermalConductivity section</a>.
</p>
<p>
  <b>Example output</b>:
</p>
<?php codeblockstart();?>
<Misc>
    <ThermalDiffusion>
      <Correlator Species="Bulk">
0 0 0 0 0
1.20049009599756 116 -3.8143162695225e-16 -1.34206107826795e-15 -1.47527366687156e-15 
2.40098019199512 115 -1.24651298193849e-15 -5.21423877223736e-15 -5.52897720662611e-15 
...
    </Correlator>
  </ThermalDiffusion>
</Misc>
<?php codeblockend("brush: xml;"); ?>
<p>
  <b>Full Tag, Subtag, and Attribute List</b>:
</p>
<ul>
  <li>
    <b>Species</b> <i>(attribute)</i>: The name of
    the <a href="/index.php/reference#species">Species</a>
    (<a href="/index.php/reference#species">Species</a> $a$ in
    $L_{aq}$).
  </li>
  <li>
    <b>Correlator</b> <i>(tag)</i>: The correlation data, outputted in
    columns which are:

    \[\Delta t \qquad Count 
    \qquad \Delta t\,L_{aq,x}(\Delta t)
    \qquad \Delta t\,L_{aq,y}(\Delta t)
    \qquad \Delta t\,L_{aq,z}(\Delta t)
    \] 

    where
    
    <br/>$\Delta t$ is the correlation time.

    <br/>$Count$ is the number of samples at that correlation time.
    
    <br/>$\Delta t\,L_{aq,x}(\Delta t)$ is the $x$-component of the
    time-dependent transport coefficient.
  </li>
</ul>
<h1>IntEnergyHist Plugin</h1>
<p>
</p>
<h1>MFT Plugin</h1>
<p>
</p>
<h1>RadiusGyration Plugin</h1>
<p>
</p>
